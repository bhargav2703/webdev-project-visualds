{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdevfinal\\\\signupfrontend\\\\src\\\\pages\\\\routepages\\\\Sll.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './navbar.css';\nimport Print from './box_print';\nimport { useRef } from 'react';\nimport './content.css';\nimport { Alert } from 'bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nums = [];\nconst check = 0;\nfunction Sll() {\n  _s();\n  // const [flex,removeflex] = useState(['flex']);\n  // const [noflex,flexx] = useState(['none']);\n  const inputRef = useRef(null);\n  const inputRef1 = useRef(null);\n  const [print, newprint] = useState( /*#__PURE__*/_jsxDEV(Print, {\n    nums: nums\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 39\n  }, this));\n  var handleClick1 = () => {\n    var r = parseInt(inputRef.current.value);\n    nums.push(r);\n    newprint( /*#__PURE__*/_jsxDEV(Print, {\n      nums: nums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this));\n    console.log(nums);\n  };\n  function handleClick2() {\n    for (var i in nums) {\n      if (nums[i] == inputRef1.current.value) {\n        check = 1;\n      }\n    }\n    if (check == 0) {\n      alert('element doesnt exist!!!');\n      // return;\n    } else var t = parseInt(inputRef1.current.value);\n    const index = nums.indexOf(t);\n    const x = nums.splice(index, 1);\n    newprint( /*#__PURE__*/_jsxDEV(Print, {\n      nums: nums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this));\n    // return(\n    //     <Print nums={nums}/>\n    // )\n\n    console.log(nums);\n    check = 0;\n  }\n  console.log(nums);\n  // nums.map((i) => {\n  //     <Box value={i}/>\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick1,\n          children: \"Insert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick2,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Print, {\n        nums: nums\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Sll, \"u0C2WZY98ipL4AkjBXdezS8Rz44=\");\n_c = Sll;\nexport default Sll;\nvar _c;\n$RefreshReg$(_c, \"Sll\");","map":{"version":3,"names":["React","useState","Print","useRef","Alert","nums","check","Sll","inputRef","inputRef1","print","newprint","handleClick1","r","parseInt","current","value","push","console","log","handleClick2","i","alert","t","index","indexOf","x","splice"],"sources":["C:/webdevfinal/signupfrontend/src/pages/routepages/Sll.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './navbar.css';\r\nimport Print from './box_print';\r\nimport {useRef} from 'react';\r\nimport './content.css'\r\nimport { Alert } from 'bootstrap';\r\n\r\nconst nums = [];\r\n\r\nconst check=0;\r\nfunction Sll(){\r\n    // const [flex,removeflex] = useState(['flex']);\r\n    // const [noflex,flexx] = useState(['none']);\r\n    const inputRef = useRef(null);\r\n    const inputRef1 = useRef(null);\r\n    const [print,newprint] = useState(<Print nums={nums}/>)\r\n    var handleClick1 = () => {\r\n        var r = parseInt(inputRef.current.value);\r\n        nums.push(r);\r\n        newprint(<Print nums={nums}/>);\r\n        console.log(nums);\r\n    }\r\n    function handleClick2(){\r\n        for(var i in nums){\r\n            if(nums[i] == inputRef1.current.value){\r\n                check = 1;\r\n            }\r\n        }\r\n        if(check == 0){\r\n            alert('element doesnt exist!!!');\r\n            // return;\r\n        }\r\n        else\r\n        var t = parseInt(inputRef1.current.value);\r\n        const index = nums.indexOf(t);\r\n        const x = nums.splice(index,1);\r\n        newprint(<Print nums={nums}/>);\r\n        // return(\r\n        //     <Print nums={nums}/>\r\n        // )\r\n        \r\n        console.log(nums);\r\n        check = 0;\r\n    }\r\n    console.log(nums);\r\n    // nums.map((i) => {\r\n    //     <Box value={i}/>\r\n    // })\r\n\r\n    return(\r\n        <div className=\"big\">\r\n          <center>\r\n          <div className=\"buttons\">\r\n                <input type=\"text\" ref={inputRef}/>\r\n                <button onClick={handleClick1}>Insert</button>\r\n                <button onClick={handleClick2}>Delete</button>\r\n                <input type=\"text\" ref={inputRef1}/>\r\n           </div>\r\n          </center>\r\n          <center>\r\n          <Print nums={nums}/>\r\n          </center>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Sll;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,MAAM,QAAO,OAAO;AAC5B,OAAO,eAAe;AACtB,SAASC,KAAK,QAAQ,WAAW;AAAC;AAElC,MAAMC,IAAI,GAAG,EAAE;AAEf,MAAMC,KAAK,GAAC,CAAC;AACb,SAASC,GAAG,GAAE;EAAA;EACV;EACA;EACA,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMM,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,eAAC,QAAC,KAAK;IAAC,IAAI,EAAEI;EAAK;IAAA;IAAA;IAAA;EAAA,QAAE,CAAC;EACvD,IAAIO,YAAY,GAAG,MAAM;IACrB,IAAIC,CAAC,GAAGC,QAAQ,CAACN,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC;IACxCX,IAAI,CAACY,IAAI,CAACJ,CAAC,CAAC;IACZF,QAAQ,eAAC,QAAC,KAAK;MAAC,IAAI,EAAEN;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,CAAC;IAC9Ba,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;EACrB,CAAC;EACD,SAASe,YAAY,GAAE;IACnB,KAAI,IAAIC,CAAC,IAAIhB,IAAI,EAAC;MACd,IAAGA,IAAI,CAACgB,CAAC,CAAC,IAAIZ,SAAS,CAACM,OAAO,CAACC,KAAK,EAAC;QAClCV,KAAK,GAAG,CAAC;MACb;IACJ;IACA,IAAGA,KAAK,IAAI,CAAC,EAAC;MACVgB,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACJ,CAAC,MAED,IAAIC,CAAC,GAAGT,QAAQ,CAACL,SAAS,CAACM,OAAO,CAACC,KAAK,CAAC;IACzC,MAAMQ,KAAK,GAAGnB,IAAI,CAACoB,OAAO,CAACF,CAAC,CAAC;IAC7B,MAAMG,CAAC,GAAGrB,IAAI,CAACsB,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;IAC9Bb,QAAQ,eAAC,QAAC,KAAK;MAAC,IAAI,EAAEN;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,CAAC;IAC9B;IACA;IACA;;IAEAa,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;IACjBC,KAAK,GAAG,CAAC;EACb;EACAY,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;EACjB;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,uBACA;QAAK,SAAS,EAAC,SAAS;QAAA,wBAClB;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAEG;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE,eACnC;UAAQ,OAAO,EAAEI,YAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC9C;UAAQ,OAAO,EAAEQ,YAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC9C;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAEX;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACnC;MAAA;MAAA;MAAA;IAAA,QACE,eACT;MAAA,uBACA,QAAC,KAAK;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAtDQE,GAAG;AAAA,KAAHA,GAAG;AAyDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}